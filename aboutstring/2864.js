/**
 * @param {string} 
 * @return {string}
 * 
给你一个 二进制 字符串 s ，其中至少包含一个 '1' 。

你必须按某种方式 重新排列 字符串中的位，使得到的二进制数字是可以由该组合生成的 最大二进制奇数 。

以字符串形式，表示并返回可以由给定组合生成的最大二进制奇数。

注意 返回的结果字符串 可以 含前导零。
示例 1：

输入：s = "010"
输出："001"
解释：因为字符串 s 中仅有一个 '1' ，其必须出现在最后一位上。所以答案是 "001" 。
示例 2：

输入：s = "0101"
输出："1001"
解释：其中一个 '1' 必须出现在最后一位上。而由剩下的数字可以生产的最大数字是 "100" 。所以答案是 "1001" 。

题目给定二进制字符串 sss 构造字典序最大的二进制奇数，根据定义可以知道字符串中每一位要么为 000，要么为 111。由于构造的数必须为奇数，则最低位必须为 111，因此我们从字符串 sss 中选择一个 111 放置到最低位。按照贪心原则，其余的 111 全部放在最高位，剩余的 000 放在剩下的位即可，直接构造目标字符串返回即可。

作者：力扣官方题解
链接：https://leetcode.cn/problems/maximum-odd-binary-number/solutions/2679827/zui-da-de-er-jin-zhi-qi-shu-by-leetcode-1mi14/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
 */
var maximumOddBinaryNumber = function(s) {
    let cnt = 0;
    for (let i = 0; i < s.length; i++) {
        if (s[i] == '1') {
            cnt++;
        }
    }
    return '1'.repeat(cnt - 1) + '0'.repeat(s.length - cnt) + '1';
};